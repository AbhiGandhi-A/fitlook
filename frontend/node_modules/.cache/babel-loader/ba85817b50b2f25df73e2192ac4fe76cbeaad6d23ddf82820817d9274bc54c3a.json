{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhig\\\\Downloads\\\\fitlook-app\\\\frontend\\\\src\\\\context\\\\FitLookContext.jsx\",\n  _s = $RefreshSig$();\n// /frontend/src/context/FitLookContext.jsx\n\nimport React, { createContext, useState } from 'react';\n\n// 1. Create the Context object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FitLookContext = /*#__PURE__*/createContext({\n  userProfile: null,\n  userImage: null,\n  selectedItems: {\n    top: null,\n    bottom: null,\n    shoes: null,\n    accessories: []\n  },\n  currentStep: 'details',\n  setCurrentStep: () => {},\n  setUserProfile: () => {},\n  handleSelectItem: () => {}\n});\n\n// 2. Create the Provider Component\nexport const FitLookProvider = ({\n  children\n}) => {\n  _s();\n  // State for the user's input details and image\n  const [userProfile, setUserProfile] = useState(null);\n  const [userImage, setUserImage] = useState(null);\n\n  // State to track the current step in the application flow\n  const [currentStep, setCurrentStep] = useState('details'); // details, catalog, preview\n\n  // State for the items currently selected by the user for the virtual try-on\n  const [selectedItems, setSelectedItems] = useState({\n    top: null,\n    bottom: null,\n    shoes: null,\n    accessories: []\n  });\n\n  // Function to save user profile and image, moving to the next step\n  const handleSetUserProfile = profileData => {\n    setUserProfile(profileData);\n    setUserImage(profileData.image); // Set the base image for the preview\n    setCurrentStep('catalog');\n  };\n\n  // Function to handle selecting or deselecting a product item\n  const handleSelectItem = (product, category) => {\n    setSelectedItems(prevItems => {\n      // Determine if the item is an accessory (which can be multiple) or a main item\n      if (category === 'accessory') {\n        const isSelected = prevItems.accessories.some(a => a.id === product.id);\n        return {\n          ...prevItems,\n          accessories: isSelected ? prevItems.accessories.filter(a => a.id !== product.id) // Remove if already selected\n          : [...prevItems.accessories, product] // Add new accessory\n        };\n      } else {\n        var _prevItems$category;\n        // For main items (top, bottom, shoes), toggle or replace\n        return {\n          ...prevItems,\n          [category]: ((_prevItems$category = prevItems[category]) === null || _prevItems$category === void 0 ? void 0 : _prevItems$category.id) === product.id ? null : product // Toggle\n        };\n      }\n    });\n  };\n\n  // Value object to be passed down to consuming components\n  const contextValue = {\n    userProfile,\n    userImage,\n    selectedItems,\n    currentStep,\n    setCurrentStep,\n    setUserProfile: handleSetUserProfile,\n    // Use the custom setter\n    handleSelectItem\n  };\n  return /*#__PURE__*/_jsxDEV(FitLookContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(FitLookProvider, \"hQTfsrB+yHnic3Sl+yHAEpLNiGo=\");\n_c = FitLookProvider;\nvar _c;\n$RefreshReg$(_c, \"FitLookProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","FitLookContext","userProfile","userImage","selectedItems","top","bottom","shoes","accessories","currentStep","setCurrentStep","setUserProfile","handleSelectItem","FitLookProvider","children","_s","setUserImage","setSelectedItems","handleSetUserProfile","profileData","image","product","category","prevItems","isSelected","some","a","id","filter","_prevItems$category","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abhig/Downloads/fitlook-app/frontend/src/context/FitLookContext.jsx"],"sourcesContent":["// /frontend/src/context/FitLookContext.jsx\r\n\r\nimport React, { createContext, useState } from 'react';\r\n\r\n// 1. Create the Context object\r\nexport const FitLookContext = createContext({\r\n  userProfile: null,\r\n  userImage: null,\r\n  selectedItems: { top: null, bottom: null, shoes: null, accessories: [] },\r\n  currentStep: 'details',\r\n  setCurrentStep: () => {},\r\n  setUserProfile: () => {},\r\n  handleSelectItem: () => {},\r\n});\r\n\r\n// 2. Create the Provider Component\r\nexport const FitLookProvider = ({ children }) => {\r\n  // State for the user's input details and image\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [userImage, setUserImage] = useState(null);\r\n\r\n  // State to track the current step in the application flow\r\n  const [currentStep, setCurrentStep] = useState('details'); // details, catalog, preview\r\n\r\n  // State for the items currently selected by the user for the virtual try-on\r\n  const [selectedItems, setSelectedItems] = useState({\r\n    top: null,\r\n    bottom: null,\r\n    shoes: null,\r\n    accessories: [],\r\n  });\r\n\r\n  // Function to save user profile and image, moving to the next step\r\n  const handleSetUserProfile = (profileData) => {\r\n    setUserProfile(profileData);\r\n    setUserImage(profileData.image); // Set the base image for the preview\r\n    setCurrentStep('catalog');\r\n  };\r\n\r\n  // Function to handle selecting or deselecting a product item\r\n  const handleSelectItem = (product, category) => {\r\n    setSelectedItems(prevItems => {\r\n      // Determine if the item is an accessory (which can be multiple) or a main item\r\n      if (category === 'accessory') {\r\n        const isSelected = prevItems.accessories.some(a => a.id === product.id);\r\n        return {\r\n          ...prevItems,\r\n          accessories: isSelected\r\n            ? prevItems.accessories.filter(a => a.id !== product.id) // Remove if already selected\r\n            : [...prevItems.accessories, product], // Add new accessory\r\n        };\r\n      } else {\r\n        // For main items (top, bottom, shoes), toggle or replace\r\n        return {\r\n          ...prevItems,\r\n          [category]: prevItems[category]?.id === product.id ? null : product, // Toggle\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  // Value object to be passed down to consuming components\r\n  const contextValue = {\r\n    userProfile,\r\n    userImage,\r\n    selectedItems,\r\n    currentStep,\r\n    setCurrentStep,\r\n    setUserProfile: handleSetUserProfile, // Use the custom setter\r\n    handleSelectItem,\r\n  };\r\n\r\n  return (\r\n    <FitLookContext.Provider value={contextValue}>\r\n      {children}\r\n    </FitLookContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
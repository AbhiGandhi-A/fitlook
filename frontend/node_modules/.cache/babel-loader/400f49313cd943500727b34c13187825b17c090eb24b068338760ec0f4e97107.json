{"ast":null,"code":"// Mock API service for v0 preview environment\n// In production, this will use the real backend at localhost:5000\n\nconst mockDiscountRules = [{\n  _id: \"1\",\n  name: \"Complete Outfit Discount\",\n  description: \"Get 10% off when you buy a complete outfit (top + bottom)\",\n  discountPercentage: 10,\n  requiredItems: {\n    top: true,\n    bottom: true\n  }\n}, {\n  _id: \"2\",\n  name: \"Formal Bundle\",\n  description: \"Get 15% off formal shirt + formal pants combo\",\n  discountPercentage: 15,\n  requiredItems: {\n    top: true,\n    bottom: true\n  }\n}];\nconst mockUsers = {};\nexport const mockApi = {\n  // User endpoints\n  async saveUserProfile(userData) {\n    const userId = `user_${Date.now()}`;\n    mockUsers[userId] = {\n      _id: userId,\n      ...userData,\n      createdAt: new Date()\n    };\n    return {\n      success: true,\n      user: mockUsers[userId]\n    };\n  },\n  async getUserProfile(userId) {\n    return mockUsers[userId] || null;\n  },\n  // Admin endpoints\n  async getDiscountRules(adminPassword) {\n    if (adminPassword !== \"admin123\") {\n      throw new Error(\"Unauthorized\");\n    }\n    return mockDiscountRules;\n  },\n  async createDiscountRule(rule, adminPassword) {\n    if (adminPassword !== \"admin123\") {\n      throw new Error(\"Unauthorized\");\n    }\n    const newRule = {\n      _id: `rule_${Date.now()}`,\n      ...rule\n    };\n    mockDiscountRules.push(newRule);\n    return {\n      success: true,\n      rule: newRule\n    };\n  },\n  // Product endpoints\n  async fetchShopifyProducts() {\n    // Mock Shopify products\n    return [{\n      id: \"1\",\n      title: \"Casual Blue Shirt\",\n      price: 29.99,\n      image: \"https://via.placeholder.com/300x400?text=Blue+Shirt\",\n      category: \"shirt\",\n      style: \"casual\",\n      color: \"blue\"\n    }, {\n      id: \"2\",\n      title: \"Formal White Shirt\",\n      price: 49.99,\n      image: \"https://via.placeholder.com/300x400?text=White+Shirt\",\n      category: \"shirt\",\n      style: \"formal\",\n      color: \"white\"\n    }, {\n      id: \"3\",\n      title: \"Black Jeans\",\n      price: 59.99,\n      image: \"https://via.placeholder.com/300x400?text=Black+Jeans\",\n      category: \"jeans\",\n      style: \"casual\",\n      color: \"black\"\n    }, {\n      id: \"4\",\n      title: \"Formal Black Pants\",\n      price: 79.99,\n      image: \"https://via.placeholder.com/300x400?text=Black+Pants\",\n      category: \"pants\",\n      style: \"formal\",\n      color: \"black\"\n    }, {\n      id: \"5\",\n      title: \"White Sneakers\",\n      price: 89.99,\n      image: \"https://via.placeholder.com/300x400?text=White+Sneakers\",\n      category: \"shoes\",\n      style: \"casual\",\n      color: \"white\"\n    }, {\n      id: \"6\",\n      title: \"Black Formal Shoes\",\n      price: 119.99,\n      image: \"https://via.placeholder.com/300x400?text=Black+Shoes\",\n      category: \"shoes\",\n      style: \"formal\",\n      color: \"black\"\n    }];\n  },\n  // Recommendation endpoints\n  async getRecommendations(selectedProduct, userPreferences) {\n    // Mock recommendation logic\n    const allProducts = await this.fetchShopifyProducts();\n    const recommendations = allProducts.filter(p => p.id !== selectedProduct.id && p.style === ((userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.preferredStyle) || \"casual\") && p.category !== selectedProduct.category);\n    return recommendations.slice(0, 4);\n  }\n};\n\n// Detect if running in preview or production\nexport const isPreviewMode = () => {\n  return typeof window !== \"undefined\" && !window.location.hostname.includes(\"localhost\");\n};\n\n// API wrapper that uses mock or real API\nexport const apiCall = async (endpoint, options = {}) => {\n  const isPreview = isPreviewMode();\n  if (isPreview) {\n    // Use mock API in preview\n    if (endpoint.includes(\"/api/user/profile\")) {\n      if (options.method === \"POST\") {\n        return mockApi.saveUserProfile(JSON.parse(options.body));\n      }\n    } else if (endpoint.includes(\"/api/admin/discount-rules\")) {\n      if (options.method === \"POST\") {\n        var _options$headers;\n        return mockApi.createDiscountRule(JSON.parse(options.body), (_options$headers = options.headers) === null || _options$headers === void 0 ? void 0 : _options$headers.adminPassword);\n      } else if (options.method === \"GET\") {\n        var _options$headers2;\n        return mockApi.getDiscountRules((_options$headers2 = options.headers) === null || _options$headers2 === void 0 ? void 0 : _options$headers2.adminPassword);\n      }\n    } else if (endpoint.includes(\"/api/products\")) {\n      return mockApi.fetchShopifyProducts();\n    } else if (endpoint.includes(\"/api/recommend\")) {\n      const body = JSON.parse(options.body || \"{}\");\n      return mockApi.getRecommendations(body.product, body.userPreferences);\n    }\n  }\n\n  // Use real API in production\n  const response = await fetch(endpoint, options);\n  if (!response.ok) {\n    throw new Error(`API error: ${response.status}`);\n  }\n  return response.json();\n};","map":{"version":3,"names":["mockDiscountRules","_id","name","description","discountPercentage","requiredItems","top","bottom","mockUsers","mockApi","saveUserProfile","userData","userId","Date","now","createdAt","success","user","getUserProfile","getDiscountRules","adminPassword","Error","createDiscountRule","rule","newRule","push","fetchShopifyProducts","id","title","price","image","category","style","color","getRecommendations","selectedProduct","userPreferences","allProducts","recommendations","filter","p","preferredStyle","slice","isPreviewMode","window","location","hostname","includes","apiCall","endpoint","options","isPreview","method","JSON","parse","body","_options$headers","headers","_options$headers2","product","response","fetch","ok","status","json"],"sources":["C:/Users/abhig/Downloads/fitlook-app/frontend/src/services/mockApi.js"],"sourcesContent":["// Mock API service for v0 preview environment\r\n// In production, this will use the real backend at localhost:5000\r\n\r\nconst mockDiscountRules = [\r\n  {\r\n    _id: \"1\",\r\n    name: \"Complete Outfit Discount\",\r\n    description: \"Get 10% off when you buy a complete outfit (top + bottom)\",\r\n    discountPercentage: 10,\r\n    requiredItems: { top: true, bottom: true },\r\n  },\r\n  {\r\n    _id: \"2\",\r\n    name: \"Formal Bundle\",\r\n    description: \"Get 15% off formal shirt + formal pants combo\",\r\n    discountPercentage: 15,\r\n    requiredItems: { top: true, bottom: true },\r\n  },\r\n]\r\n\r\nconst mockUsers = {}\r\n\r\nexport const mockApi = {\r\n  // User endpoints\r\n  async saveUserProfile(userData) {\r\n    const userId = `user_${Date.now()}`\r\n    mockUsers[userId] = {\r\n      _id: userId,\r\n      ...userData,\r\n      createdAt: new Date(),\r\n    }\r\n    return { success: true, user: mockUsers[userId] }\r\n  },\r\n\r\n  async getUserProfile(userId) {\r\n    return mockUsers[userId] || null\r\n  },\r\n\r\n  // Admin endpoints\r\n  async getDiscountRules(adminPassword) {\r\n    if (adminPassword !== \"admin123\") {\r\n      throw new Error(\"Unauthorized\")\r\n    }\r\n    return mockDiscountRules\r\n  },\r\n\r\n  async createDiscountRule(rule, adminPassword) {\r\n    if (adminPassword !== \"admin123\") {\r\n      throw new Error(\"Unauthorized\")\r\n    }\r\n    const newRule = {\r\n      _id: `rule_${Date.now()}`,\r\n      ...rule,\r\n    }\r\n    mockDiscountRules.push(newRule)\r\n    return { success: true, rule: newRule }\r\n  },\r\n\r\n  // Product endpoints\r\n  async fetchShopifyProducts() {\r\n    // Mock Shopify products\r\n    return [\r\n      {\r\n        id: \"1\",\r\n        title: \"Casual Blue Shirt\",\r\n        price: 29.99,\r\n        image: \"https://via.placeholder.com/300x400?text=Blue+Shirt\",\r\n        category: \"shirt\",\r\n        style: \"casual\",\r\n        color: \"blue\",\r\n      },\r\n      {\r\n        id: \"2\",\r\n        title: \"Formal White Shirt\",\r\n        price: 49.99,\r\n        image: \"https://via.placeholder.com/300x400?text=White+Shirt\",\r\n        category: \"shirt\",\r\n        style: \"formal\",\r\n        color: \"white\",\r\n      },\r\n      {\r\n        id: \"3\",\r\n        title: \"Black Jeans\",\r\n        price: 59.99,\r\n        image: \"https://via.placeholder.com/300x400?text=Black+Jeans\",\r\n        category: \"jeans\",\r\n        style: \"casual\",\r\n        color: \"black\",\r\n      },\r\n      {\r\n        id: \"4\",\r\n        title: \"Formal Black Pants\",\r\n        price: 79.99,\r\n        image: \"https://via.placeholder.com/300x400?text=Black+Pants\",\r\n        category: \"pants\",\r\n        style: \"formal\",\r\n        color: \"black\",\r\n      },\r\n      {\r\n        id: \"5\",\r\n        title: \"White Sneakers\",\r\n        price: 89.99,\r\n        image: \"https://via.placeholder.com/300x400?text=White+Sneakers\",\r\n        category: \"shoes\",\r\n        style: \"casual\",\r\n        color: \"white\",\r\n      },\r\n      {\r\n        id: \"6\",\r\n        title: \"Black Formal Shoes\",\r\n        price: 119.99,\r\n        image: \"https://via.placeholder.com/300x400?text=Black+Shoes\",\r\n        category: \"shoes\",\r\n        style: \"formal\",\r\n        color: \"black\",\r\n      },\r\n    ]\r\n  },\r\n\r\n  // Recommendation endpoints\r\n  async getRecommendations(selectedProduct, userPreferences) {\r\n    // Mock recommendation logic\r\n    const allProducts = await this.fetchShopifyProducts()\r\n    const recommendations = allProducts.filter(\r\n      (p) =>\r\n        p.id !== selectedProduct.id &&\r\n        p.style === (userPreferences?.preferredStyle || \"casual\") &&\r\n        p.category !== selectedProduct.category,\r\n    )\r\n    return recommendations.slice(0, 4)\r\n  },\r\n}\r\n\r\n// Detect if running in preview or production\r\nexport const isPreviewMode = () => {\r\n  return typeof window !== \"undefined\" && !window.location.hostname.includes(\"localhost\")\r\n}\r\n\r\n// API wrapper that uses mock or real API\r\nexport const apiCall = async (endpoint, options = {}) => {\r\n  const isPreview = isPreviewMode()\r\n\r\n  if (isPreview) {\r\n    // Use mock API in preview\r\n    if (endpoint.includes(\"/api/user/profile\")) {\r\n      if (options.method === \"POST\") {\r\n        return mockApi.saveUserProfile(JSON.parse(options.body))\r\n      }\r\n    } else if (endpoint.includes(\"/api/admin/discount-rules\")) {\r\n      if (options.method === \"POST\") {\r\n        return mockApi.createDiscountRule(JSON.parse(options.body), options.headers?.adminPassword)\r\n      } else if (options.method === \"GET\") {\r\n        return mockApi.getDiscountRules(options.headers?.adminPassword)\r\n      }\r\n    } else if (endpoint.includes(\"/api/products\")) {\r\n      return mockApi.fetchShopifyProducts()\r\n    } else if (endpoint.includes(\"/api/recommend\")) {\r\n      const body = JSON.parse(options.body || \"{}\")\r\n      return mockApi.getRecommendations(body.product, body.userPreferences)\r\n    }\r\n  }\r\n\r\n  // Use real API in production\r\n  const response = await fetch(endpoint, options)\r\n  if (!response.ok) {\r\n    throw new Error(`API error: ${response.status}`)\r\n  }\r\n  return response.json()\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
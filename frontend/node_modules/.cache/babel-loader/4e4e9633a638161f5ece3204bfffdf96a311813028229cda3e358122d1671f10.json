{"ast":null,"code":"// src/components/Recommendations.jsx\n\"use client\";\n\n// Component for displaying AI-powered recommendations\nvar _jsxFileName = \"C:\\\\Users\\\\abhig\\\\Downloads\\\\fitlook-app\\\\frontend\\\\src\\\\components\\\\Recommendations.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\n// Assuming FitLookContext is defined in a separate context file\nimport { FitLookContext } from \"../context/FitLookContext\";\nimport { apiCall } from \"../services/mockApi\";\nimport \"../styles/Recommendations.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommendations({\n  selectedProduct\n}) {\n  _s();\n  const {\n    handleSelectItem\n  } = useContext(FitLookContext);\n  const [recommendations, setRecommendations] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch recommendations\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      if (!selectedProduct) return; // Guard clause\n\n      try {\n        setLoading(true);\n        // API Call to get complementary items\n        const data = await apiCall(\"/api/recommend/get\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            product: selectedProduct,\n            // Assuming user preferences are fetched from the user context/API\n            userPreferences: {\n              preferredStyle: \"casual\"\n            }\n          })\n        });\n        setRecommendations(data || []);\n      } catch (error) {\n        console.error(\"Error fetching recommendations:\", error);\n        setRecommendations([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRecommendations();\n  }, [selectedProduct]); // FIX: Added selectedProduct as dependency\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recommended Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recommendations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : recommendations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-grid\",\n      children: recommendations.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation-card\",\n        onClick: () => handleSelectItem(item, item.category),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image || \"/placeholder.svg\",\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category\",\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [\"$\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recommendations available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Recommendations, \"ZMYacSzFXoTNxGE/F0xKfvoM4sU=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useContext","FitLookContext","apiCall","jsxDEV","_jsxDEV","Recommendations","selectedProduct","handleSelectItem","recommendations","setRecommendations","loading","setLoading","fetchRecommendations","data","method","headers","body","JSON","stringify","product","userPreferences","preferredStyle","error","console","className","children","fileName","lineNumber","columnNumber","length","map","item","onClick","category","src","image","alt","title","price","id","_c","$RefreshReg$"],"sources":["C:/Users/abhig/Downloads/fitlook-app/frontend/src/components/Recommendations.jsx"],"sourcesContent":["// src/components/Recommendations.jsx\n\"use client\"\n\n// Component for displaying AI-powered recommendations\nimport { useState, useEffect, useContext } from \"react\"\n// Assuming FitLookContext is defined in a separate context file\nimport { FitLookContext } from \"../context/FitLookContext\" \nimport { apiCall } from \"../services/mockApi\"\nimport \"../styles/Recommendations.css\"\n\nfunction Recommendations({ selectedProduct }) {\n  const { handleSelectItem } = useContext(FitLookContext)\n  const [recommendations, setRecommendations] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  // Fetch recommendations\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      if (!selectedProduct) return // Guard clause\n      \n      try {\n        setLoading(true)\n        // API Call to get complementary items\n        const data = await apiCall(\"/api/recommend/get\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            product: selectedProduct,\n            // Assuming user preferences are fetched from the user context/API\n            userPreferences: { preferredStyle: \"casual\" }, \n          }),\n        })\n\n        setRecommendations(data || [])\n      } catch (error) {\n        console.error(\"Error fetching recommendations:\", error)\n        setRecommendations([])\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchRecommendations()\n  }, [selectedProduct]) // FIX: Added selectedProduct as dependency\n\n  return (\n    <div className=\"recommendations-section\">\n      <h3>Recommended Items</h3>\n      {loading ? (\n        <p>Loading recommendations...</p>\n      ) : recommendations.length > 0 ? (\n        <div className=\"recommendations-grid\">\n          {recommendations.map((item) => (\n            <div key={item.id} className=\"recommendation-card\" onClick={() => handleSelectItem(item, item.category)}>\n              <img src={item.image || \"/placeholder.svg\"} alt={item.title} />\n              <h4>{item.title}</h4>\n              <p className=\"category\">{item.category}</p>\n              <p className=\"price\">${item.price}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No recommendations available</p>\n      )}\n    </div>\n  )\n}\n\nexport default Recommendations"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
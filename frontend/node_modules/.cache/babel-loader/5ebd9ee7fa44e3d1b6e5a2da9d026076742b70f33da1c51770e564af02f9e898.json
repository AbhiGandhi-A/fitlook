{"ast":null,"code":"// API client for communicating with FitLook backend\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\n/**\r\n * Make API call to backend\r\n * @param {String} endpoint - API endpoint (e.g., '/products/shopify/all')\r\n * @param {String} method - HTTP method (GET, POST, etc.)\r\n * @param {Object} data - Request body data\r\n * @param {Object} options - Additional options (headers, etc.)\r\n * @returns {Promise} API response\r\n */\nexport const apiCall = async (endpoint, method = \"GET\", data = null, options = {}) => {\n  try {\n    console.log(`[FitLook] API Call: ${method} ${endpoint}`);\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...options.headers\n    };\n    if (options.adminPassword) {\n      headers[\"admin-password\"] = options.adminPassword;\n    }\n    const fetchOptions = {\n      method,\n      headers,\n      ...options\n    };\n    if (data) {\n      fetchOptions.body = JSON.stringify(data);\n    }\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, fetchOptions);\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status}`);\n    }\n    const result = await response.json();\n    console.log(`[FitLook] API Response:`, result);\n    return result;\n  } catch (error) {\n    console.error(`[FitLook] API Error:`, error.message);\n    throw error;\n  }\n};\n\n// User API calls\nexport const saveUserProfile = profile => apiCall(\"/user/profile\", \"POST\", profile);\nexport const getUserProfile = userId => apiCall(`/user/${userId}`, \"GET\");\n\n// Product API calls\nexport const fetchAllProducts = () => apiCall(\"/products/shopify/all\", \"GET\");\nexport const fetchProductById = productId => apiCall(`/products/${productId}`, \"GET\");\nexport const searchProducts = query => apiCall(`/products/search?query=${query}`, \"GET\");\nexport const getProductsByCategory = category => apiCall(`/products/category/${category}`, \"GET\");\n\n// Recommendation API calls\nexport const getRecommendations = (productId, preferences) => apiCall(\"/recommend/get\", \"POST\", {\n  selectedProductId: productId,\n  userPreferences: preferences\n});\nexport const getCompleteOutfitRecommendations = (topId, bottomId, preferences) => apiCall(\"/recommend/complete-outfit\", \"POST\", {\n  topId,\n  bottomId,\n  userPreferences: preferences\n});\n\n// Cart API calls\nexport const addItemToCart = (variantId, quantity = 1) => apiCall(\"/cart/add-item\", \"POST\", {\n  variantId,\n  quantity\n});\nexport const addOutfitToCart = (topVariantId, bottomVariantId, shoeVariantId, accessoryVariantIds) => apiCall(\"/cart/add-outfit\", \"POST\", {\n  topVariantId,\n  bottomVariantId,\n  shoeVariantId,\n  accessoryVariantIds\n});\n\n// Admin API calls\nexport const getDiscountRules = password => apiCall(\"/admin/discount-rules\", \"GET\", null, {\n  adminPassword: password\n});\nexport const createDiscountRule = (password, rule) => apiCall(\"/admin/discount-rules\", \"POST\", rule, {\n  adminPassword: password\n});","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiCall","endpoint","method","data","options","console","log","headers","adminPassword","fetchOptions","body","JSON","stringify","response","fetch","ok","Error","status","result","json","error","message","saveUserProfile","profile","getUserProfile","userId","fetchAllProducts","fetchProductById","productId","searchProducts","query","getProductsByCategory","category","getRecommendations","preferences","selectedProductId","userPreferences","getCompleteOutfitRecommendations","topId","bottomId","addItemToCart","variantId","quantity","addOutfitToCart","topVariantId","bottomVariantId","shoeVariantId","accessoryVariantIds","getDiscountRules","password","createDiscountRule","rule"],"sources":["C:/Users/abhig/Downloads/fitlook-app/frontend/src/services/apiClient.js"],"sourcesContent":["// API client for communicating with FitLook backend\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\"\r\n\r\n/**\r\n * Make API call to backend\r\n * @param {String} endpoint - API endpoint (e.g., '/products/shopify/all')\r\n * @param {String} method - HTTP method (GET, POST, etc.)\r\n * @param {Object} data - Request body data\r\n * @param {Object} options - Additional options (headers, etc.)\r\n * @returns {Promise} API response\r\n */\r\nexport const apiCall = async (endpoint, method = \"GET\", data = null, options = {}) => {\r\n  try {\r\n    console.log(`[FitLook] API Call: ${method} ${endpoint}`)\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      ...options.headers,\r\n    }\r\n\r\n    if (options.adminPassword) {\r\n      headers[\"admin-password\"] = options.adminPassword\r\n    }\r\n\r\n    const fetchOptions = {\r\n      method,\r\n      headers,\r\n      ...options,\r\n    }\r\n\r\n    if (data) {\r\n      fetchOptions.body = JSON.stringify(data)\r\n    }\r\n\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, fetchOptions)\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`API error: ${response.status}`)\r\n    }\r\n\r\n    const result = await response.json()\r\n    console.log(`[FitLook] API Response:`, result)\r\n    return result\r\n  } catch (error) {\r\n    console.error(`[FitLook] API Error:`, error.message)\r\n    throw error\r\n  }\r\n}\r\n\r\n// User API calls\r\nexport const saveUserProfile = (profile) => apiCall(\"/user/profile\", \"POST\", profile)\r\nexport const getUserProfile = (userId) => apiCall(`/user/${userId}`, \"GET\")\r\n\r\n// Product API calls\r\nexport const fetchAllProducts = () => apiCall(\"/products/shopify/all\", \"GET\")\r\nexport const fetchProductById = (productId) => apiCall(`/products/${productId}`, \"GET\")\r\nexport const searchProducts = (query) => apiCall(`/products/search?query=${query}`, \"GET\")\r\nexport const getProductsByCategory = (category) => apiCall(`/products/category/${category}`, \"GET\")\r\n\r\n// Recommendation API calls\r\nexport const getRecommendations = (productId, preferences) =>\r\n  apiCall(\"/recommend/get\", \"POST\", { selectedProductId: productId, userPreferences: preferences })\r\nexport const getCompleteOutfitRecommendations = (topId, bottomId, preferences) =>\r\n  apiCall(\"/recommend/complete-outfit\", \"POST\", { topId, bottomId, userPreferences: preferences })\r\n\r\n// Cart API calls\r\nexport const addItemToCart = (variantId, quantity = 1) => apiCall(\"/cart/add-item\", \"POST\", { variantId, quantity })\r\nexport const addOutfitToCart = (topVariantId, bottomVariantId, shoeVariantId, accessoryVariantIds) =>\r\n  apiCall(\"/cart/add-outfit\", \"POST\", { topVariantId, bottomVariantId, shoeVariantId, accessoryVariantIds })\r\n\r\n// Admin API calls\r\nexport const getDiscountRules = (password) => apiCall(\"/admin/discount-rules\", \"GET\", null, { adminPassword: password })\r\nexport const createDiscountRule = (password, rule) =>\r\n  apiCall(\"/admin/discount-rules\", \"POST\", rule, { adminPassword: password })\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
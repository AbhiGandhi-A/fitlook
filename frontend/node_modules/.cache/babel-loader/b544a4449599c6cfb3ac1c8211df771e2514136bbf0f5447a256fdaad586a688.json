{"ast":null,"code":"import _objectSpread from\"C:/Users/abhig/Downloads/fitlook-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// API client for communicating with FitLook backend\nconst API_BASE_URL=process.env.REACT_APP_API_URL||\"http://localhost:5000/api\";/**\r\n * Make API call to backend\r\n * @param {String} endpoint - API endpoint (e.g., '/products/shopify/all')\r\n * @param {String} method - HTTP method (GET, POST, etc.)\r\n * @param {Object} data - Request body data\r\n * @param {Object} options - Additional options (headers, etc.)\r\n * @returns {Promise} API response\r\n */export const apiCall=async function(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"GET\";let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};try{console.log(\"[FitLook] API Call: \".concat(method,\" \").concat(endpoint));const headers=_objectSpread({\"Content-Type\":\"application/json\"},options.headers);if(options.adminPassword){headers[\"admin-password\"]=options.adminPassword;}const fetchOptions=_objectSpread({method,headers},options);if(data){fetchOptions.body=JSON.stringify(data);}const response=await fetch(\"\".concat(API_BASE_URL).concat(endpoint),fetchOptions);if(!response.ok){throw new Error(\"API error: \".concat(response.status));}const result=await response.json();console.log(\"[FitLook] API Response:\",result);return result;}catch(error){console.error(\"[FitLook] API Error:\",error.message);throw error;}};// User API calls\nexport const saveUserProfile=profile=>apiCall(\"/user/profile\",\"POST\",profile);export const getUserProfile=userId=>apiCall(\"/user/\".concat(userId),\"GET\");// Product API calls\nexport const fetchAllProducts=()=>apiCall(\"/products/shopify/all\",\"GET\");export const fetchProductById=productId=>apiCall(\"/products/\".concat(productId),\"GET\");export const searchProducts=query=>apiCall(\"/products/search?query=\".concat(query),\"GET\");export const getProductsByCategory=category=>apiCall(\"/products/category/\".concat(category),\"GET\");// Recommendation API calls\nexport const getRecommendations=(productId,preferences)=>apiCall(\"/recommend/get\",\"POST\",{selectedProductId:productId,userPreferences:preferences});export const getCompleteOutfitRecommendations=(topId,bottomId,preferences)=>apiCall(\"/recommend/complete-outfit\",\"POST\",{topId,bottomId,userPreferences:preferences});// Cart API calls\nexport const addItemToCart=function(variantId){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return apiCall(\"/cart/add-item\",\"POST\",{variantId,quantity});};export const addOutfitToCart=(topVariantId,bottomVariantId,shoeVariantId,accessoryVariantIds)=>apiCall(\"/cart/add-outfit\",\"POST\",{topVariantId,bottomVariantId,shoeVariantId,accessoryVariantIds});// Admin API calls\nexport const getDiscountRules=password=>apiCall(\"/admin/discount-rules\",\"GET\",null,{adminPassword:password});export const createDiscountRule=(password,rule)=>apiCall(\"/admin/discount-rules\",\"POST\",rule,{adminPassword:password});","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiCall","endpoint","method","arguments","length","undefined","data","options","console","log","concat","headers","_objectSpread","adminPassword","fetchOptions","body","JSON","stringify","response","fetch","ok","Error","status","result","json","error","message","saveUserProfile","profile","getUserProfile","userId","fetchAllProducts","fetchProductById","productId","searchProducts","query","getProductsByCategory","category","getRecommendations","preferences","selectedProductId","userPreferences","getCompleteOutfitRecommendations","topId","bottomId","addItemToCart","variantId","quantity","addOutfitToCart","topVariantId","bottomVariantId","shoeVariantId","accessoryVariantIds","getDiscountRules","password","createDiscountRule","rule"],"sources":["C:/Users/abhig/Downloads/fitlook-app/frontend/src/services/apiClient.js"],"sourcesContent":["// API client for communicating with FitLook backend\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\"\r\n\r\n/**\r\n * Make API call to backend\r\n * @param {String} endpoint - API endpoint (e.g., '/products/shopify/all')\r\n * @param {String} method - HTTP method (GET, POST, etc.)\r\n * @param {Object} data - Request body data\r\n * @param {Object} options - Additional options (headers, etc.)\r\n * @returns {Promise} API response\r\n */\r\nexport const apiCall = async (endpoint, method = \"GET\", data = null, options = {}) => {\r\n  try {\r\n    console.log(`[FitLook] API Call: ${method} ${endpoint}`)\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      ...options.headers,\r\n    }\r\n\r\n    if (options.adminPassword) {\r\n      headers[\"admin-password\"] = options.adminPassword\r\n    }\r\n\r\n    const fetchOptions = {\r\n      method,\r\n      headers,\r\n      ...options,\r\n    }\r\n\r\n    if (data) {\r\n      fetchOptions.body = JSON.stringify(data)\r\n    }\r\n\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, fetchOptions)\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`API error: ${response.status}`)\r\n    }\r\n\r\n    const result = await response.json()\r\n    console.log(`[FitLook] API Response:`, result)\r\n    return result\r\n  } catch (error) {\r\n    console.error(`[FitLook] API Error:`, error.message)\r\n    throw error\r\n  }\r\n}\r\n\r\n// User API calls\r\nexport const saveUserProfile = (profile) => apiCall(\"/user/profile\", \"POST\", profile)\r\nexport const getUserProfile = (userId) => apiCall(`/user/${userId}`, \"GET\")\r\n\r\n// Product API calls\r\nexport const fetchAllProducts = () => apiCall(\"/products/shopify/all\", \"GET\")\r\nexport const fetchProductById = (productId) => apiCall(`/products/${productId}`, \"GET\")\r\nexport const searchProducts = (query) => apiCall(`/products/search?query=${query}`, \"GET\")\r\nexport const getProductsByCategory = (category) => apiCall(`/products/category/${category}`, \"GET\")\r\n\r\n// Recommendation API calls\r\nexport const getRecommendations = (productId, preferences) =>\r\n  apiCall(\"/recommend/get\", \"POST\", { selectedProductId: productId, userPreferences: preferences })\r\nexport const getCompleteOutfitRecommendations = (topId, bottomId, preferences) =>\r\n  apiCall(\"/recommend/complete-outfit\", \"POST\", { topId, bottomId, userPreferences: preferences })\r\n\r\n// Cart API calls\r\nexport const addItemToCart = (variantId, quantity = 1) => apiCall(\"/cart/add-item\", \"POST\", { variantId, quantity })\r\nexport const addOutfitToCart = (topVariantId, bottomVariantId, shoeVariantId, accessoryVariantIds) =>\r\n  apiCall(\"/cart/add-outfit\", \"POST\", { topVariantId, bottomVariantId, shoeVariantId, accessoryVariantIds })\r\n\r\n// Admin API calls\r\nexport const getDiscountRules = (password) => apiCall(\"/admin/discount-rules\", \"GET\", null, { adminPassword: password })\r\nexport const createDiscountRule = (password, rule) =>\r\n  apiCall(\"/admin/discount-rules\", \"POST\", rule, { adminPassword: password })\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}